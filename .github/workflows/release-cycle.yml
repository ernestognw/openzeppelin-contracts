name: Release Cycle

on:
  push:
    branches:
      - release-v*
  workflow_dispatch: {}

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  state:
    name: Check state
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - id: state
        name: Get state
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: await require('./scripts/release/workflow/state.js')({ github, context, core })
    outputs:
      # Job Flags
      start: ${{ steps.state.outputs.start }}
      changesets: ${{ steps.state.outputs.changesets }}
      promote: ${{ steps.state.outputs.promote }}
      publish: ${{ steps.state.outputs.publish }}
      merge: ${{ steps.state.outputs.merge }}

      # Global variables
      is_prerelease: ${{ steps.state.outputs.is_prerelease }}
      version: ${{ steps.state.outputs.version }}

  start:
    needs: state
    name: Start new release branch with release candidate
    permissions:
      contents: write
    if: needs.state.outputs.start == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - run: bash scripts/git-user-config.sh
      - name: Create branch with release candidate
        run: bash scripts/release/workflow/start.sh

  promote:
    needs: state
    name: Promote to final release
    permissions:
      contents: write
    if: needs.state.outputs.promote == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - run: bash scripts/git-user-config.sh
      - name: Exit prerelease state if needed
        run: bash scripts/release/workflow/exit-prerelease.sh
        env:
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}

  changesets:
    needs: [state, start, promote]
    name: Changesets PR
    permissions:
      contents: write
      pull-requests: write
    if: ${{ always() && needs.state.outputs.changesets == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # To get all tags
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Set release title
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: await require('./scripts/release/workflow/set-changesets-pr-title.js')({ core })
      - name: Create PR
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: npm run version
          title: ${{ env.TITLE }}
          commit: ${{ env.TITLE }}
          body: | # Wait for support on this
            This is an automated PR for releasing ${{ github.repository }}
            Check [CHANGELOG.md](${{ github.repository }}/CHANGELOG.md)

  pack:
    needs: state
    name: Pack npm dist
    if: needs.state.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - id: pack
        name: Pack
        run: bash scripts/release/workflow/pack.sh
      - name: Save next packed version
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.repository }}-${{ needs.state.outputs.version }}
          path: contracts/${{ steps.pack.outputs.tarball }}
    outputs:
      tarball: ${{ steps.pack.outputs.tarball }}

  publish:
    needs: [state, pack]
    name: Publish to npm
    environment: npm
    permissions:
      contents: write
    if: needs.state.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - run: bash scripts/git-user-config.sh
      - name: Download next packed version
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.repository }}-${{ needs.state.outputs.version }}
          path: contracts/
      - name: Publish and tag
        run: bash scripts/release/workflow/publish.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TARBALL: ${{ needs.pack.outputs.tarball }}
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
      - name: Create Github Release
        uses: actions/github-script@v6
        with:
          script: await require('./scripts/release/workflow/github-release.js')({ github, context })

  merge:
    needs: state
    name: Create PR back to master for final releases
    permissions:
      contents: write
      pull-requests: write
    if: needs.state.outputs.merge == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # All branches
      - name: Set up environment
        uses: ./.github/actions/setup
      - run: bash scripts/git-user-config.sh
      - name: Create branch to merge
        run: bash scripts/release/workflow/prepare-release-merge.sh
      - name: Create PR back to master
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'merge/${{ github.ref_name }}',
              base: 'master',
              title: '${{ format('Merge {0} branch', github.ref_name) }}'
            });
